#!/bin/bash
# HealthPrep Start Examples - Hybrid Port Conflict Resolution

echo "üè• HealthPrep Medical Screening System - Start Examples"
echo "=================================================="

echo ""
echo "üìã Available Start Methods:"
echo ""

echo "1Ô∏è‚É£  Standard Development (with basic port handling)"
echo "   python main.py"
echo "   ‚Üí Uses PORT environment variable (default: 5000)"
echo "   ‚Üí Basic port conflict fallback"
echo ""

echo "2Ô∏è‚É£  Smart Development (with advanced conflict resolution)"
echo "   USE_SMART_START=true python main.py"
echo "   ‚Üí Advanced process cleanup"
echo "   ‚Üí Intelligent port detection"
echo "   ‚Üí Enhanced logging"
echo ""

echo "3Ô∏è‚É£  Direct Smart Start - Development"
echo "   python smart_start.py dev"
echo "   ‚Üí Full hybrid approach"
echo "   ‚Üí Process cleanup + port flexibility"
echo "   ‚Üí Best for development with conflicts"
echo ""

echo "4Ô∏è‚É£  Production Preview (Gunicorn)"
echo "   python smart_start.py prod"
echo "   ‚Üí Gunicorn server on port 5001"
echo "   ‚Üí Production-like environment"
echo "   ‚Üí Advanced cleanup and port handling"
echo ""

echo "5Ô∏è‚É£  Custom Port Configuration"
echo "   PORT=8080 python main.py"
echo "   PORT=8080 python smart_start.py dev"
echo "   PROD_PORT=8081 python smart_start.py prod"
echo ""

echo "üîß Environment Variables:"
echo "   PORT          - Development server port (default: 5000)"
echo "   PROD_PORT     - Production preview port (default: 5001)"
echo "   USE_SMART_START - Enable smart conflict resolution (true/false)"
echo ""

echo "üí° Workflow Integration:"
echo "   Your existing workflows can use these approaches:"
echo "   - Modify workflow commands to include environment variables"
echo "   - Use smart_start.py for maximum conflict resolution"
echo "   - Combine with existing cleanup commands for best results"
echo ""

echo "üö® Port Conflict Resolution Features:"
echo "   ‚úÖ Automatic process cleanup (Python, Gunicorn, Flask)"
echo "   ‚úÖ Smart port detection and fallback"
echo "   ‚úÖ Environment-based configuration"
echo "   ‚úÖ Integration with existing workflows"
echo "   ‚úÖ Detailed logging and error handling"