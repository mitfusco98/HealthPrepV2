# HealthPrep Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control

# =============================================================================
# REQUIRED SECRETS - Application will not start without these
# =============================================================================

# Flask Secret Key - Used for session encryption and CSRF protection
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-here-must-be-at-least-32-chars

# Database Connection String
# For PostgreSQL: postgresql://username:password@hostname:port/database
# For local SQLite (development only): sqlite:///instance/healthprep.db
DATABASE_URL=postgresql://user:password@localhost:5432/healthprep

# Field-Level Encryption Key - Used for encrypting Epic credentials in database
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# CRITICAL: This key encrypts OAuth tokens and client secrets in the database
ENCRYPTION_KEY=your-fernet-encryption-key-here-44-chars

# =============================================================================
# EPIC FHIR INTEGRATION (Required for Epic connectivity)
# =============================================================================

# Epic OAuth Client Credentials (per organization in production)
# These are managed in the Organization model for multi-tenancy
# Set these for default/sandbox testing only
EPIC_NONPROD_CLIENT_ID=your-epic-client-id
EPIC_NONPROD_CLIENT_SECRET=your-epic-client-secret

# Epic JWT Backend Service Authentication
# Private key for JWT client authentication (PEM format)
# Generate with Epic App Orchard registration process
NP_KEY_PRIVATE_KEY=your-nonprod-private-key-pem-content
P_KEY_PRIVATE_KEY=your-prod-private-key-pem-content

# Key IDs for JWT signing
NP_KEY_KID=np-2025-08-a
P_KEY_KID=p-2025-08-a

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Flask Environment (development, production, testing)
FLASK_ENV=development

# Application Base URL (for OAuth redirects)
APP_BASE_URL=http://localhost:5000

# =============================================================================
# EPIC DRY-RUN MODE (Optional - for testing)
# =============================================================================

# Enable dry-run mode for Epic write-back (logs DocumentReference without sending)
# Set to "true" to enable PHI-safe testing of Epic integration
EPIC_DRY_RUN=false

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Startup Document Processing (disabled by default for performance)
# Set to "true" to process unmatched documents on startup
STARTUP_PROCESS_DOCS=false

# Session Timeout (in minutes)
SESSION_TIMEOUT_MINUTES=30

# Maximum File Upload Size (in MB)
MAX_UPLOAD_SIZE_MB=16

# =============================================================================
# REDIS / BACKGROUND JOBS (Optional - for async processing)
# =============================================================================

# Redis URL for RQ background jobs
# For local Redis: redis://localhost:6379/0
# For AWS ElastiCache: redis://your-elasticache-endpoint:6379
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# AWS CONFIGURATION (for production deployment)
# =============================================================================

# AWS Region
AWS_REGION=us-east-1

# S3 Bucket for document storage (optional)
AWS_S3_BUCKET=healthprep-documents

# AWS Secrets Manager (optional - alternative to environment variables)
AWS_SECRETS_MANAGER_ARN=arn:aws:secretsmanager:region:account:secret:healthprep-secrets

# =============================================================================
# MONITORING & LOGGING (Optional)
# =============================================================================

# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# HIPAA COMPLIANCE SETTINGS
# =============================================================================

# Audit Log Retention (days) - HIPAA requires minimum 6-7 years
AUDIT_RETENTION_DAYS=2555

# PHI Logging Level (minimal, standard, detailed, none)
PHI_LOGGING_LEVEL=minimal

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# 1. NEVER use default or weak passwords/keys
# 2. Always use PostgreSQL (not SQLite) in production
# 3. Enable ENCRYPTION_KEY for all Epic credential storage
# 4. Set FLASK_ENV=production for production deployments
# 5. Use HTTPS-only in production (handled by reverse proxy/ALB)
# 6. Store secrets in AWS Secrets Manager or similar vault system
# 7. Rotate SECRET_KEY and ENCRYPTION_KEY periodically
# 8. Enable comprehensive audit logging for HIPAA compliance
# 9. Ensure DATABASE_URL uses encrypted connections (SSL/TLS)
# 10. Review and update CSP headers for your specific CDN/assets
