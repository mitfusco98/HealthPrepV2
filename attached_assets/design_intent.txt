The screening engine works by parsing based on the user defined screening type criteria. It tells the engine what text to look for, who is eligible for certain screenings, and the status of compliance for that screening - we have the keywords associated with specific screening types to match them to EMR documents based on file and document names, as well as document content via OCR extraction (with PHI redaction). This is for finding relevant documents for screenings because often incoming documents are named semi-arbitrarily, with punctuation, spelling, and subject differences. For example, a bone density screening may be labelled as 'dxa', 'dexa', or 'dxa_scan.pdf'. The keywords are meant to alleviate these recognition concerns. Regardless if a present document is a match, it must be compared to the screening type criteria in order to determine the status of the screening (due or complete). Document matching is one front - the next is defined screening criteria. The screening type criteria has multiple classified factors to make sure that a patient is eligible for a screening based on their gender, age, and preexisting conditions. These are correlated to screening type criteria with the fields of gender, age range, and trigger conditions. These fields are meant to reduce the amount of patient information that must be parsed in order to find a matched document. Typically in healthcare, there are screening types that have gender, age, and condition specific protocols. Some examples include how women are generally required to do mammograms and pap smears, while males do not, so it would be ineffective to search in male profiles for these screenings. Additionally, a diabetic patient generally does an A1C test every three months, while nondiabetics have them less often. The other field of screening frequency (along with the date of last completion) defines the frequency in which the screening type must be fulfilled in order to be complete or in compliance with the standard of care. If no matched document is found, then the screening status will remain as ‘due’. However, if a matched document is found, the date of its completion must be compared with the screening frequency to determine if the screening is ‘complete’ due to the matched document, or still ‘due’. For example, with a frequency of one year, a matched document must be from a date within a year of the current date. The only exception to these statuses is ‘due soon’ where a matched document fulfills the criteria and frequency, but is within 30 days of losing its ‘complete’ status by aging out. All outputs of the screening engine are shown on the screening list.
Special features of the screening type section include: fuzzy detection for screening types and trigger conditions, screening type variants for ability to create different screening protocols for different trigger conditions, ability to add, edit, and delete screening types from the software, screening type status activation and deactivation, importation of screening type presets based on applicable specialty or needs of the office, and selective refreshing protocols.
Fuzzy detection: assistance with creating screening types by providing universal, standardized names for screening types to avoid user input errors by typos and general confusion. A parallel feature will exist for assigning trigger conditions, in order to properly interoperate with FHIR, so that conditions listed in the EMR can be recognized by the screening engine and properly assigned the correct eligibility for screening types. Additionally, fuzzy detection will be used in the process of matching filenames even when they use different separators—such as underscores, dashes, or periods—instead of spaces or expected formatting. The goal is to identify semantically equivalent terms regardless of how they are written, in order to match to keywords.
Screening type variants: enhanced by the fuzzy detection, users will be able to create different screening type protocols linked under the same name. This is mostly used for the presence of trigger conditions, which creates different eligibility for the same screening type. The example above, for diabetics, illustrates the use - a diabetic patient generally does an A1C test every three months, while nondiabetics have them less often. In this system, a diabetic is recognized for their trigger condition, and assigned different criteria for the same screening - whether altered frequency, age ranges, or keywords. These variants will be associated - other instances referencing the screening type will note that there are multiple variants under the same screening name (i.e “A1C Test [3 variants]”). Additionally, in order to prevent confusion, the status activity of a variant should sync to all other variants.
Add, edit, and delete: Users will have the option to add, edit, and delete screening types from the software based on their needs. Deletion should be considered as a more permanent and meaningful removal from the software as opposed to a deactivation of status. Additions and edits should result in a regeneration of the screening list based on the new criteria of the screening type - in order for maximal efficiency, universal refreshes will be prevented by selective refreshing, where only the screening types affected by changes should be regenerated.
Screening type activation and deactivation: the status field is included for screening types, controlling their ability to be included in the screening engine, which in turn should affect their inclusion in the screening list and generated prep sheets.
Importation of screening type presets: rather than forcing each office to create their own screening type protocols from scratch, templates should be readily available (whether native to the software or imported from a website) to create ready-to-apply screening type criteria that seamlessly integrates into the app. This puts less creative burden on the users and allows them to make more simple adjustments to the preset, instead of coming up with criteria for dozens of screenings individually. Additionally, this allows offices, clinics, hospitals, and individuals of varying specialties and needs to easily create, refine, and share screening protocols.
Selective refreshing: the ability of the software to self-recognize which changes have occurred, whether changes to screening criteria (additions, edits, deletions of screening types; changes to screening criteria like keywords, gender, age ranges, frequency, status) or additions or deletions of documents from the EMR, in order to refresh the screening list by applying the engine to screenings, patients, and documents that have changed and are out of date, while preserving outputs of the engine that are unaffected. 
The screening list displays the patient name, the screening type (based on their eligibility), status of the screenings, date of late completion (if no documents are matched, it is N/A), the frequency of the screening, and matched documents (if applicable). The screening list is responsible for displaying the result of the screening engine as defined by the present criteria. It should allow the ability to filter by patient name, status, and screening type.
The prep sheet settings will primarily be used to control data cutoffs, as in how far back the screening engine will look for data to be displayed on the prep sheet, applicable to the medical data types of laboratories, imaging, consults, and hospital visits. Screening frequency settings are separately configured by the defined screening type criteria. However, this setting is meant to define the time frame of broad (but important) medical data categories shown on the prep sheet. See ‘prep sheet structure’ for more context. Document relevancy for matched documents of screening types was set to only show matched documents only within the last frequency period via these formulas:
Calculate cutoff date:
If frequency is in years: cutoff_date = last_completed - relativedelta(years=frequency_number)
If frequency is in months: cutoff_date = last_completed - relativedelta(months=frequency_number)
Filter accordingly:
Only show documents created after the cutoff date
Documents older than one frequency cycle are filtered out


Current Prep Sheet Template Structure
The prep sheet template (templates/prep_sheet.html) includes the following main sections:
1. Patient Header
Patient name, MRN, DOB, age, sex
Prep date and last visit information
2. Patient Summary Section
Recent visit history with appointment details
Active medical conditions with diagnosis dates
3. Recent Medical Data Sections
Recent Lab Results - Test name, date, results, reference ranges, status
Recent Imaging Studies - Study type, body site, date, impression
Recent Specialist Consults - Specialty, specialist, date, recommendations
Recent Hospital Stays - Hospital, admission/discharge dates, diagnosis
4. Quality Checklist Section
This is the main screening section that displays:
Screening table with columns for:
Screening name
Last completed date
Frequency
Status (Due/Due Soon/Complete with color-coded badges)
Matched documents (clickable links to view documents)
5. Enhanced Medical Data with Document Integration
The template includes filtered medical data sections showing:
Laboratories - Both structured lab results and lab documents
Imaging - Both imaging studies and imaging documents
Consults - Both consult reports and consult documents
Hospital Visits - Both hospital summaries and hospital documents
Each section shows data from a configurable time period (e.g., "last 12 months") and includes clickable document links.
Key Features:
Document relevancy filtering - Only shows documents from the current screening cycle
Interactive document links - Click to view documents in new tabs
Error handling - Graceful handling of unavailable documents


Admin Dashboard Overview
Provides comprehensive system monitoring and management capabilities at /admin/dashboard:
Core Administrative Features
Recent Activity Monitoring: Admin logs with filtering by event type, date range, and user
User Management: Interface for managing system users
Screening Type Preset Management: Add, edit, and configure screening types presets 
Admin Logging System
Comprehensive Event Tracking: All admin actions are logged with timestamps, user IDs, and IP addresses
Data Modification Logging: Tracks changes to screening types and system configurations
Log Export: JSON export functionality for compliance and auditing
Filtered Log Viewing: Search logs by event type, date range, and user for detailed analysis


OCR Management System
Provides automated document processing with HIPAA compliance:
OCR Dashboard (/admin/ocr)
Processing Statistics: Success rates, average processing times, confidence scores
Document Status Tracking: Total documents, OCR processed count, pending processing queue
Quality Monitoring: Low confidence document identification and quality assessment
Recent Activity: 7-day processing history with confidence indicators
Read-Only Interface: Simplified workflow focusing on monitoring rather than reprocessing
Key OCR Features
Automatic Processing: All document uploads trigger OCR extraction automatically
Tesseract Integration: Medical document optimized OCR with quality controls
Confidence Scoring: Documents rated with confidence percentages and quality flags
Selective Refresh Integration: OCR text immediately triggers screening keyword matching










PHI Filtering & HIPAA Compliance
Ensures HIPAA compliance during OCR processing:
PHI Filter Settings (/admin/phi)
Global Toggle: Master switch to enable/disable PHI filtering system-wide
Granular Controls: Individual toggles for different PHI types:
Social Security Numbers (XXX-XX-XXXX patterns)
Phone Numbers ((XXX) XXX-XXXX patterns)
Medical Record Numbers (MRN patterns)
Insurance Information (policy/member IDs)
Street Addresses
Patient Names
Dates (while preserving medical values like blood pressure)
Medical Term Protection
Smart Pattern Recognition: Distinguishes medical terminology from PHI data
Preserved Medical Content: Lab values (glucose, A1C, cholesterol), procedures (mammogram, colonoscopy), measurements (mg/dL, blood pressure readings)
Context-Aware Filtering: Prevents corruption of medical terms while filtering identifying information
PHI Statistics & Monitoring
Processing Metrics: Documents processed, PHI instances found/redacted
Type-Specific Tracking: Breakdown of PHI types detected (SSN, phone, dates, etc.)
Test Interface: Built-in PHI filter testing with before/after text comparison
Configuration Export: JSON export of filter settings for backup/compliance
Advanced PHI Features
Overlap Detection: Prevents corrupted text from overlapping PHI replacements
Line-Boundary Awareness: Regex patterns respect line boundaries to avoid cross-line matching
Medical Term Validation: Contextual checking to preserve clinical terminology
Audit Trail: Complete logging of PHI detection and redaction for compliance documentation


Business Goals
ROI-Based Pricing Strategy
Anchor pricing to the time and labor saved by automating prep sheet creation. For every 500 patients, the system saves an estimated 2,500 minutes (approximately 42 hours) of MA or nurse labor, which translates into significant operational savings.
Multi-Segment Market Penetration
Establish distinct go-to-market strategies for three core customer types:
Single clinics: Focus on ease of setup and rapid return on investment.
Physician groups: Emphasize staff time reduction and consistency in prep quality.
Hospital systems: Highlight integration capability, compliance, and workflow standardization.
Customer Value Transparency
Build in-app analytics in /admin/dashboard to quantify “hours saved,” “tasks automated,” and “gaps closed” to clearly demonstrate ROI and support future upselling or retention.


Streamlined Onboarding via Admin Credentials
Enable secure onboarding through Epic (or other EMR) admin credentials to reduce setup friction and allow new customers to begin using the product within hours.

Scalability Goals
Batch Automation for High Patient Volumes
Ensure the system can semi-simultaneously prepare high-quality prep sheets for at least 500 patients at a time, handling thousands of associated documents efficiently.
Elastic Infrastructure
Use scalable cloud architecture that can expand on demand based on:
Number of scheduled patients
Size and complexity of document sets
Real-time prep demands near appointment time
Multi-Tenant Architecture
Develop the system to support multiple customers with full data isolation and:
Custom screening criteria per organization
Role-based permissions (admin, nurse, MA)
Separate dashboards and audit logs
FHIR-Integrated Design
Support standard SMART on FHIR workflows for EMR integration, ensuring compatibility with Epic, athenahealth, and Cerner environments. Prioritize minimal IT effort for onboarding.
Async Document Processing
Implement asynchronous job queuing (e.g., using Celery or equivalent) for document ingestion, parsing, and prep generation, allowing the system to handle spikes in load without delays.
Performance Goals
Prep Generation Speed
Deliver prep sheets within an average of 10 seconds per patient, even under load from:
1,000+ documents per batch
Custom rules and logic applied per sheet
System Availability
Maintain 99.9% uptime across all user-facing and background services, with appropriate logging, monitoring, and alerting infrastructure.
Real-Time EMR Syncing
Ensure prep sheets are built from data updated within 15–30 minutes of EMR changes (or in near-real-time if using webhook/subscription support via FHIR).
High Document Classification Accuracy
Achieve 95%+ accuracy in assigning incoming documents to relevant prep categories using AI-assisted keyword matching, regex pipelines, or lightweight models.
HIPAA-Compliant Architecture
Maintain full compliance with healthcare data privacy standards through:
End-to-end encryption
Secure access control and audit logging
PHI protection measures at both infrastructure and application layers

Security, PHI, and HIPAA Compliance Goals
1. Data Encryption Standards
Encrypt all PHI in transit and at rest using industry standards:
TLS 1.2 or higher for transport
AES-256 for storage
Verify encryption of backups and logs that may include PHI.
2. User Authentication and Access Controls
Implement multi-factor authentication (MFA) for all admin and clinical users.
Enforce role-based access control (RBAC):
Restrict PHI access by role (e.g., MA vs. nurse vs. admin)
Prevent users from accessing patient data outside their organization
3. Audit Logging and Monitoring
Maintain immutable audit logs for all user actions involving PHI:
Viewing patient prep sheets
Exporting or modifying data
Ensure logs include timestamp, user ID, action, and patient reference.
Retain logs for 6+ years to meet HIPAA and institutional recordkeeping policies.
4. Minimum Necessary Data Access
Design systems to access and expose only the minimum data necessary for prep sheet generation.
Ensure APIs and background jobs don’t overfetch PHI from EMRs or external systems.
5. Access Revocation and Session Expiry
Automatically log out users after a period of inactivity (e.g., 15–30 minutes).
Provide mechanisms for admin-level access revocation in real time (e.g., when staff leave the organization).
6. Breach Detection and Response Plan
Develop and document an incident response plan that includes:
Breach detection workflows
Notification timelines (including 60-day HIPAA breach rule)
Coordination with affected customers and legal counsel
7. Business Associate Agreement (BAA) Readiness
Prepare standard Business Associate Agreement templates for:
Small clinics
Large health systems
Ensure all vendors (e.g., cloud providers, logging services) handling PHI also sign BAAs and are subcontractor-compliant.
8. Penetration Testing and Vulnerability Scanning
Conduct annual third-party penetration tests, with written remediation plans for all critical findings.
Run regular automated vulnerability scans across all environments.
9. HIPAA Training and Workforce Policies
Maintain HIPAA training documentation for all employees and contractors.
Limit developer access to production data or PHI unless strictly necessary and logged.
10. Data Retention and Deletion Policies
Clearly define how long PHI is retained after use.
Provide mechanisms for clinics to:
Request patient data export
Trigger full deletion of patient records if contract ends or on request


